//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalculatorWithService.CalculatorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalculatorInputs", Namespace="http://schemas.datacontract.org/2004/07/BasicWCFService")]
    [System.SerializableAttribute()]
    public partial class CalculatorInputs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string aField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string a {
            get {
                return this.aField;
            }
            set {
                if ((object.ReferenceEquals(this.aField, value) != true)) {
                    this.aField = value;
                    this.RaisePropertyChanged("a");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string b {
            get {
                return this.bField;
            }
            set {
                if ((object.ReferenceEquals(this.bField, value) != true)) {
                    this.bField = value;
                    this.RaisePropertyChanged("b");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultAcknowledgement", Namespace="http://schemas.datacontract.org/2004/07/BasicWCFService")]
    [System.SerializableAttribute()]
    public partial class ResultAcknowledgement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResultValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResultValue {
            get {
                return this.ResultValueField;
            }
            set {
                if ((this.ResultValueField.Equals(value) != true)) {
                    this.ResultValueField = value;
                    this.RaisePropertyChanged("ResultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculatorService.ICalculator")]
    public interface ICalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Add", ReplyAction="http://tempuri.org/ICalculator/AddResponse")]
        CalculatorWithService.CalculatorService.ResultAcknowledgement Add(CalculatorWithService.CalculatorService.CalculatorInputs numbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Add", ReplyAction="http://tempuri.org/ICalculator/AddResponse")]
        System.Threading.Tasks.Task<CalculatorWithService.CalculatorService.ResultAcknowledgement> AddAsync(CalculatorWithService.CalculatorService.CalculatorInputs numbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Subtract", ReplyAction="http://tempuri.org/ICalculator/SubtractResponse")]
        CalculatorWithService.CalculatorService.ResultAcknowledgement Subtract(CalculatorWithService.CalculatorService.CalculatorInputs numbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Subtract", ReplyAction="http://tempuri.org/ICalculator/SubtractResponse")]
        System.Threading.Tasks.Task<CalculatorWithService.CalculatorService.ResultAcknowledgement> SubtractAsync(CalculatorWithService.CalculatorService.CalculatorInputs numbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Multiply", ReplyAction="http://tempuri.org/ICalculator/MultiplyResponse")]
        CalculatorWithService.CalculatorService.ResultAcknowledgement Multiply(CalculatorWithService.CalculatorService.CalculatorInputs numbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Multiply", ReplyAction="http://tempuri.org/ICalculator/MultiplyResponse")]
        System.Threading.Tasks.Task<CalculatorWithService.CalculatorService.ResultAcknowledgement> MultiplyAsync(CalculatorWithService.CalculatorService.CalculatorInputs numbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Division", ReplyAction="http://tempuri.org/ICalculator/DivisionResponse")]
        CalculatorWithService.CalculatorService.ResultAcknowledgement Division(CalculatorWithService.CalculatorService.CalculatorInputs numbers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Division", ReplyAction="http://tempuri.org/ICalculator/DivisionResponse")]
        System.Threading.Tasks.Task<CalculatorWithService.CalculatorService.ResultAcknowledgement> DivisionAsync(CalculatorWithService.CalculatorService.CalculatorInputs numbers);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorChannel : CalculatorWithService.CalculatorService.ICalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorClient : System.ServiceModel.ClientBase<CalculatorWithService.CalculatorService.ICalculator>, CalculatorWithService.CalculatorService.ICalculator {
        
        public CalculatorClient() {
        }
        
        public CalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CalculatorWithService.CalculatorService.ResultAcknowledgement Add(CalculatorWithService.CalculatorService.CalculatorInputs numbers) {
            return base.Channel.Add(numbers);
        }
        
        public System.Threading.Tasks.Task<CalculatorWithService.CalculatorService.ResultAcknowledgement> AddAsync(CalculatorWithService.CalculatorService.CalculatorInputs numbers) {
            return base.Channel.AddAsync(numbers);
        }
        
        public CalculatorWithService.CalculatorService.ResultAcknowledgement Subtract(CalculatorWithService.CalculatorService.CalculatorInputs numbers) {
            return base.Channel.Subtract(numbers);
        }
        
        public System.Threading.Tasks.Task<CalculatorWithService.CalculatorService.ResultAcknowledgement> SubtractAsync(CalculatorWithService.CalculatorService.CalculatorInputs numbers) {
            return base.Channel.SubtractAsync(numbers);
        }
        
        public CalculatorWithService.CalculatorService.ResultAcknowledgement Multiply(CalculatorWithService.CalculatorService.CalculatorInputs numbers) {
            return base.Channel.Multiply(numbers);
        }
        
        public System.Threading.Tasks.Task<CalculatorWithService.CalculatorService.ResultAcknowledgement> MultiplyAsync(CalculatorWithService.CalculatorService.CalculatorInputs numbers) {
            return base.Channel.MultiplyAsync(numbers);
        }
        
        public CalculatorWithService.CalculatorService.ResultAcknowledgement Division(CalculatorWithService.CalculatorService.CalculatorInputs numbers) {
            return base.Channel.Division(numbers);
        }
        
        public System.Threading.Tasks.Task<CalculatorWithService.CalculatorService.ResultAcknowledgement> DivisionAsync(CalculatorWithService.CalculatorService.CalculatorInputs numbers) {
            return base.Channel.DivisionAsync(numbers);
        }
    }
}
